{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ng-currency.js","webpack:///webpack/bootstrap a039a0c76350a886b635","webpack:///./ng-currency.module.js","webpack:///./ng-currency.directive.js","webpack:///external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_angular","_angular2","_ngCurrencyDirective","_ngCurrencyDirective2","_module","directive","name","ngCurrency","$filter","$locale","$timeout","link","scope","element","attrs","ngModel","reloadThis","initialized","$emit","decimalRex","dChar","RegExp","clearRex","fraction","clearValue","String","dSeparator","NUMBER_FORMATS","DECIMAL_SEP","cleared","indexOf","neg_dummy","getCurrencySymbol","neg_regexp","GROUP_SEP","neg_dummy_txt","replace","exec","value_dummy_txt","test","match","join","undefined","currencySymbol","CURRENCY_SYM","reformatViewValue","formatters","$formatters","idx","length","viewValue","$$rawModelValue","$setViewValue","$render","min","max","ngRequired","$observe","Number","$validate","$parsers","push","cVal","on","$commitViewValue","unshift","$validators","isNaN","$on","toFixed","$inject"],"mappings":"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","file":"ng-currency.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ng-currency\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-currency\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ng-currency\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ng-currency\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-currency\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ng-currency\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(2);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _ngCurrencyDirective = __webpack_require__(1);\n\t\n\tvar _ngCurrencyDirective2 = _interopRequireDefault(_ngCurrencyDirective);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = _angular2.default.module('ng-currency', []);\n\t\n\t_module.directive('ngCurrency', _ngCurrencyDirective2.default);\n\t\n\texports.default = _module.name;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngCurrency.$inject = [\"$filter\", \"$locale\", \"$timeout\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = ngCurrency;\n\t/*\n\t * ng-currency\n\t * http://alaguirre.com/\n\t\n\t * Version: 0.10.1 - 2016-06-05\n\t * License: MIT\n\t */\n\t\n\t/* @ngInject */\n\tfunction ngCurrency($filter, $locale, $timeout) {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t      if (attrs.ngCurrency === 'false') return;\n\t      var initialized = void 0,\n\t          min = void 0,\n\t          max = void 0,\n\t          currencySymbol = void 0,\n\t          ngRequired = void 0,\n\t          fraction = void 0;\n\t\n\t      attrs.$observe('min', function (value) {\n\t        min = Number(value);\n\t        ngModel.$validate();\n\t        reloadThis();\n\t      });\n\t      attrs.$observe('max', function (value) {\n\t        max = Number(value);\n\t        ngModel.$validate();\n\t        reloadThis();\n\t      });\n\t      attrs.$observe('currencySymbol', function (value) {\n\t        currencySymbol = value;\n\t        reloadThis();\n\t      });\n\t      attrs.$observe('ngRequired', function (value) {\n\t        ngRequired = value;\n\t        reloadThis();\n\t      });\n\t      attrs.$observe('fraction', function (value) {\n\t        fraction = value;\n\t        reloadThis();\n\t      });\n\t\n\t      fraction = fraction || 2;\n\t\n\t      $timeout(function () {\n\t        initialized = true;\n\t        reloadThis();\n\t      });\n\t\n\t      function reloadThis() {\n\t        if (initialized) {\n\t          scope.$emit('currencyRedraw');\n\t        }\n\t      }\n\t\n\t      function decimalRex(dChar) {\n\t        return RegExp(\"\\\\d|\\\\-|\\\\\" + dChar, 'g');\n\t      }\n\t\n\t      function clearRex(dChar) {\n\t        return RegExp(\"\\\\-{0,1}((\\\\\" + dChar + \")|([0-9]{1,}\\\\\" + dChar + \"?))&?[0-9]{0,\" + fraction + \"}\", 'g');\n\t      }\n\t\n\t      function clearValue(value) {\n\t        value = String(value);\n\t        var dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP;\n\t        var cleared = null;\n\t\n\t        if (value.indexOf($locale.NUMBER_FORMATS.DECIMAL_SEP) === -1 && value.indexOf('.') !== -1 && fraction > 0) {\n\t          dSeparator = '.';\n\t        }\n\t\n\t        // Replace negative pattern to minus sign (-)\n\t        var neg_dummy = $filter('currency')(\"-1\", getCurrencySymbol(), fraction);\n\t        var neg_regexp = RegExp(\"[0-9.\" + $locale.NUMBER_FORMATS.DECIMAL_SEP + $locale.NUMBER_FORMATS.GROUP_SEP + \"]+\");\n\t        var neg_dummy_txt = neg_dummy.replace(neg_regexp.exec(neg_dummy), \"\");\n\t        var value_dummy_txt = value.replace(neg_regexp.exec(value), \"\");\n\t\n\t        // If is negative\n\t        if (neg_dummy_txt === value_dummy_txt) {\n\t          value = '-' + neg_regexp.exec(value);\n\t        }\n\t\n\t        if (RegExp(\"^-[\\\\s]*$\", 'g').test(value)) {\n\t          value = \"-0\";\n\t        }\n\t\n\t        if (decimalRex(dSeparator).test(value)) {\n\t          cleared = value.match(decimalRex(dSeparator)).join(\"\").match(clearRex(dSeparator));\n\t          cleared = cleared ? cleared[0].replace(dSeparator, \".\") : null;\n\t        }\n\t\n\t        return cleared;\n\t      }\n\t\n\t      function getCurrencySymbol() {\n\t        if (currencySymbol !== undefined) {\n\t          return currencySymbol;\n\t        }\n\t        return $locale.NUMBER_FORMATS.CURRENCY_SYM;\n\t      }\n\t\n\t      function reformatViewValue() {\n\t        var formatters = ngModel.$formatters;\n\t        var idx = formatters.length;\n\t\n\t        var viewValue = ngModel.$$rawModelValue;\n\t        while (idx--) {\n\t          viewValue = formatters[idx](viewValue);\n\t        }\n\t\n\t        ngModel.$setViewValue(viewValue);\n\t        ngModel.$render();\n\t      }\n\t\n\t      ngModel.$parsers.push(function (viewValue) {\n\t        var cVal = clearValue(viewValue);\n\t        // Check for fast digitation (-. or .)\n\t        if (cVal === \".\" || cVal === \"-.\") {\n\t          cVal = \".0\";\n\t        }\n\t        return Number(cVal);\n\t      });\n\t\n\t      element.on(\"blur\", function () {\n\t        ngModel.$commitViewValue();\n\t        reformatViewValue();\n\t      });\n\t\n\t      ngModel.$formatters.unshift(function (value) {\n\t        return $filter('currency')(value, getCurrencySymbol(), fraction);\n\t      });\n\t\n\t      ngModel.$validators.min = function (value) {\n\t        if (!ngRequired && isNaN(value)) {\n\t          return true;\n\t        }\n\t        return !min || value >= min;\n\t      };\n\t\n\t      ngModel.$validators.max = function (value) {\n\t        if (!ngRequired && isNaN(value)) {\n\t          return true;\n\t        }\n\t        return !max || value <= max;\n\t      };\n\t\n\t      ngModel.$validators.fraction = function (value) {\n\t        return !value || !isNaN(value);\n\t      };\n\t\n\t      scope.$on('currencyRedraw', function () {\n\t        ngModel.$commitViewValue();\n\t        reformatViewValue();\n\t      });\n\t\n\t      element.on('focus', function () {\n\t        var viewValue = ngModel.$$rawModelValue;\n\t\n\t        if (isNaN(viewValue) || viewValue === '' || viewValue === null) {\n\t          viewValue = '';\n\t        } else {\n\t          viewValue = Number(viewValue).toFixed(fraction);\n\t        }\n\t        ngModel.$setViewValue(viewValue);\n\t        ngModel.$render();\n\t      });\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ng-currency.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap a039a0c76350a886b635\n **/","import angular from 'angular';\nimport ngCurrency from './ng-currency.directive.js';\n\nconst module = angular.module('ng-currency', []);\n\nmodule.directive('ngCurrency', ngCurrency);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng-currency.module.js\n **/","/*\n * ng-currency\n * http://alaguirre.com/\n\n * Version: 0.10.1 - 2016-06-05\n * License: MIT\n */\n\n/* @ngInject */\nexport default function ngCurrency($filter, $locale, $timeout) {\n  return {\n    require: 'ngModel',\n    link: (scope, element, attrs, ngModel) => {\n      if (attrs.ngCurrency === 'false') return;\n      let initialized, min, max, currencySymbol, ngRequired, fraction;\n\n      attrs.$observe('min', (value) => {\n        min = Number(value);\n        ngModel.$validate();\n        reloadThis();\n      });\n      attrs.$observe('max', (value) => {\n        max = Number(value);\n        ngModel.$validate();\n        reloadThis();\n      });\n      attrs.$observe('currencySymbol', (value) => {\n        currencySymbol = value;\n        reloadThis();\n      });\n      attrs.$observe('ngRequired', (value) => {\n        ngRequired = value;\n        reloadThis();\n      });\n      attrs.$observe('fraction', (value) => {\n        fraction = value;\n        reloadThis();\n      });\n\n      fraction = fraction || 2;\n\n      $timeout(() => {\n        initialized = true;\n        reloadThis();\n      });\n\n      function reloadThis() {\n        if (initialized) {\n          scope.$emit('currencyRedraw');\n        }\n      }\n\n      function decimalRex(dChar) {\n        return RegExp(\"\\\\d|\\\\-|\\\\\" + dChar, 'g');\n      }\n\n      function clearRex(dChar) {\n        return RegExp(\"\\\\-{0,1}((\\\\\" + dChar + \")|([0-9]{1,}\\\\\" + dChar + \"?))&?[0-9]{0,\" + fraction + \"}\", 'g');\n      }\n\n      function clearValue(value) {\n        value = String(value);\n        var dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP;\n        var cleared = null;\n\n        if (value.indexOf($locale.NUMBER_FORMATS.DECIMAL_SEP) === -1 &&\n          value.indexOf('.') !== -1 &&\n          fraction > 0) {\n          dSeparator = '.';\n        }\n\n        // Replace negative pattern to minus sign (-)\n        var neg_dummy = $filter('currency')(\"-1\", getCurrencySymbol(), fraction);\n        var neg_regexp = RegExp(\"[0-9.\" + $locale.NUMBER_FORMATS.DECIMAL_SEP + $locale.NUMBER_FORMATS.GROUP_SEP + \"]+\");\n        var neg_dummy_txt = neg_dummy.replace(neg_regexp.exec(neg_dummy), \"\");\n        var value_dummy_txt = value.replace(neg_regexp.exec(value), \"\");\n\n        // If is negative\n        if (neg_dummy_txt === value_dummy_txt) {\n          value = '-' + neg_regexp.exec(value);\n        }\n\n        if (RegExp(\"^-[\\\\s]*$\", 'g').test(value)) {\n          value = \"-0\";\n        }\n\n        if (decimalRex(dSeparator).test(value)) {\n          cleared = value.match(decimalRex(dSeparator))\n            .join(\"\").match(clearRex(dSeparator));\n          cleared = cleared ? cleared[0].replace(dSeparator, \".\") : null;\n        }\n\n        return cleared;\n      }\n\n      function getCurrencySymbol() {\n        if (currencySymbol !== undefined) {\n          return currencySymbol;\n        }\n        return $locale.NUMBER_FORMATS.CURRENCY_SYM;\n      }\n\n      function reformatViewValue() {\n        var formatters = ngModel.$formatters;\n        var idx = formatters.length;\n\n        var viewValue = ngModel.$$rawModelValue;\n        while (idx--) {\n          viewValue = formatters[idx](viewValue);\n        }\n\n        ngModel.$setViewValue(viewValue);\n        ngModel.$render();\n      }\n\n      ngModel.$parsers.push(function(viewValue) {\n        var cVal = clearValue(viewValue);\n        // Check for fast digitation (-. or .)\n        if (cVal === \".\" || cVal === \"-.\") {\n          cVal = \".0\";\n        }\n        return Number(cVal);\n      });\n\n      element.on(\"blur\", function() {\n        ngModel.$commitViewValue();\n        reformatViewValue();\n      });\n\n      ngModel.$formatters.unshift(function(value) {\n        return $filter('currency')(value, getCurrencySymbol(), fraction);\n      });\n\n      ngModel.$validators.min = function(value) {\n        if (!ngRequired && isNaN(value)) {\n          return true;\n        }\n        return !min || value >= min;\n      };\n\n      ngModel.$validators.max = function(value) {\n        if (!ngRequired && isNaN(value)) {\n          return true;\n        }\n        return !max || value <= max;\n      };\n\n      ngModel.$validators.fraction = function(value) {\n        return !value || !isNaN(value);\n      };\n\n      scope.$on('currencyRedraw', function() {\n        ngModel.$commitViewValue();\n        reformatViewValue();\n      });\n\n      element.on('focus', function() {\n        var viewValue = ngModel.$$rawModelValue;\n\n        if (isNaN(viewValue) || viewValue === '' || viewValue === null) {\n          viewValue = '';\n        } else {\n          viewValue = Number(viewValue).toFixed(fraction);\n        }\n        ngModel.$setViewValue(viewValue);\n        ngModel.$render();\n      });\n    }\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng-currency.directive.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}