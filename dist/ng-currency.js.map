{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///ng-currency.js","webpack:///webpack/bootstrap 42e882a8b251edd246b6","webpack:///./ng-currency.module.js","webpack:///./ng-currency.directive.js","webpack:///external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}"],"names":["root","factory","exports","module","require","define","amd","this","__WEBPACK_EXTERNAL_MODULE_2__","modules","__webpack_require__","moduleId","installedModules","id","loaded","call","m","c","p","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_angular","_angular2","_ngCurrencyDirective","_ngCurrencyDirective2","_module","directive","name","ngCurrency","$filter","$locale","$timeout","link","scope","element","attrs","ngModel","refresh","initialized","$validate","$emit","decimalRex","dChar","RegExp","clearRex","fraction","clearValue","String","dSeparator","NUMBER_FORMATS","DECIMAL_SEP","cleared","indexOf","neg_dummy","getCurrencySymbol","neg_regexp","GROUP_SEP","neg_dummy_txt","replace","exec","value_dummy_txt","test","match","join","undefined","currencySymbol","CURRENCY_SYM","executeFormatters","viewValue","$$rawModelValue","i","$formatters","length","$setViewValue","$render","keepInRange","active","hardCap","max","min","ngRequired","$observe","Number","$parsers","push","$validators","isNaN","$on","$commitViewValue","on","toFixed","$viewValue","triggerHandler","$inject"],"mappings":"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","file":"ng-currency.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ng-currency\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-currency\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ng-currency\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn \n\n\n/** WEBPACK FOOTER **\n ** webpack/universalModuleDefinition\n **/","(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory(require(\"angular\"));\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine(\"ng-currency\", [\"angular\"], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"ng-currency\"] = factory(require(\"angular\"));\n\telse\n\t\troot[\"ng-currency\"] = factory(root[\"angular\"]);\n})(this, function(__WEBPACK_EXTERNAL_MODULE_2__) {\nreturn /******/ (function(modules) { // webpackBootstrap\n/******/ \t// The module cache\n/******/ \tvar installedModules = {};\n/******/\n/******/ \t// The require function\n/******/ \tfunction __webpack_require__(moduleId) {\n/******/\n/******/ \t\t// Check if module is in cache\n/******/ \t\tif(installedModules[moduleId])\n/******/ \t\t\treturn installedModules[moduleId].exports;\n/******/\n/******/ \t\t// Create a new module (and put it into the cache)\n/******/ \t\tvar module = installedModules[moduleId] = {\n/******/ \t\t\texports: {},\n/******/ \t\t\tid: moduleId,\n/******/ \t\t\tloaded: false\n/******/ \t\t};\n/******/\n/******/ \t\t// Execute the module function\n/******/ \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n/******/\n/******/ \t\t// Flag the module as loaded\n/******/ \t\tmodule.loaded = true;\n/******/\n/******/ \t\t// Return the exports of the module\n/******/ \t\treturn module.exports;\n/******/ \t}\n/******/\n/******/\n/******/ \t// expose the modules object (__webpack_modules__)\n/******/ \t__webpack_require__.m = modules;\n/******/\n/******/ \t// expose the module cache\n/******/ \t__webpack_require__.c = installedModules;\n/******/\n/******/ \t// __webpack_public_path__\n/******/ \t__webpack_require__.p = \"\";\n/******/\n/******/ \t// Load entry module and return exports\n/******/ \treturn __webpack_require__(0);\n/******/ })\n/************************************************************************/\n/******/ ([\n/* 0 */\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _angular = __webpack_require__(2);\n\t\n\tvar _angular2 = _interopRequireDefault(_angular);\n\t\n\tvar _ngCurrencyDirective = __webpack_require__(1);\n\t\n\tvar _ngCurrencyDirective2 = _interopRequireDefault(_ngCurrencyDirective);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\tvar _module = _angular2.default.module('ng-currency', []);\n\t\n\t_module.directive('ngCurrency', _ngCurrencyDirective2.default);\n\t\n\texports.default = _module.name;\n\n/***/ },\n/* 1 */\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tngCurrency.$inject = [\"$filter\", \"$locale\", \"$timeout\"];\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\texports.default = ngCurrency;\n\t/*\n\t * ng-currency\n\t * http://alaguirre.com/\n\t\n\t * Version: 0.10.1 - 2016-06-05\n\t * License: MIT\n\t */\n\t\n\t/* @ngInject */\n\tfunction ngCurrency($filter, $locale, $timeout) {\n\t  return {\n\t    require: 'ngModel',\n\t    link: function link(scope, element, attrs, ngModel) {\n\t      var initialized = void 0,\n\t          hardCap = void 0,\n\t          min = void 0,\n\t          max = void 0,\n\t          currencySymbol = void 0,\n\t          ngRequired = void 0;\n\t      var active = true;\n\t      var fraction = 2;\n\t\n\t      attrs.$observe('ngCurrency', function (value) {\n\t        active = value !== 'false';\n\t        refresh();\n\t      });\n\t      attrs.$observe('hardCap', function (value) {\n\t        hardCap = value === 'true';\n\t        refresh();\n\t      });\n\t      attrs.$observe('min', function (value) {\n\t        min = value ? Number(value) : undefined;\n\t        refresh();\n\t      });\n\t      attrs.$observe('max', function (value) {\n\t        max = value ? Number(value) : undefined;\n\t        refresh();\n\t      });\n\t      attrs.$observe('currencySymbol', function (value) {\n\t        currencySymbol = value;\n\t        refresh();\n\t      });\n\t      attrs.$observe('ngRequired', function (value) {\n\t        ngRequired = value;\n\t        refresh();\n\t      });\n\t      attrs.$observe('fraction', function (value) {\n\t        fraction = value || 2;\n\t        refresh();\n\t      });\n\t\n\t      $timeout(function () {\n\t        initialized = true;\n\t        refresh();\n\t      });\n\t\n\t      function refresh() {\n\t        if (initialized) {\n\t          ngModel.$validate();\n\t          scope.$emit('currencyRedraw');\n\t        }\n\t      }\n\t\n\t      function decimalRex(dChar) {\n\t        return RegExp('\\\\d|\\\\-|\\\\' + dChar, 'g');\n\t      }\n\t\n\t      function clearRex(dChar) {\n\t        return RegExp('\\\\-{0,1}((\\\\' + dChar + ')|([0-9]{1,}\\\\' + dChar + '?))&?[0-9]{0,' + fraction + '}', 'g');\n\t      }\n\t\n\t      function clearValue(value) {\n\t        value = String(value);\n\t        var dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP;\n\t        var cleared = null;\n\t\n\t        if (value.indexOf($locale.NUMBER_FORMATS.DECIMAL_SEP) === -1 && value.indexOf('.') !== -1 && fraction > 0) {\n\t          dSeparator = '.';\n\t        }\n\t\n\t        // Replace negative pattern to minus sign (-)\n\t        var neg_dummy = $filter('currency')('-1', getCurrencySymbol(), fraction);\n\t        var neg_regexp = RegExp('[0-9.' + $locale.NUMBER_FORMATS.DECIMAL_SEP + $locale.NUMBER_FORMATS.GROUP_SEP + ']+');\n\t        var neg_dummy_txt = neg_dummy.replace(neg_regexp.exec(neg_dummy), '');\n\t        var value_dummy_txt = value.replace(neg_regexp.exec(value), '');\n\t\n\t        // If is negative\n\t        if (neg_dummy_txt === value_dummy_txt) {\n\t          value = '-' + neg_regexp.exec(value);\n\t        }\n\t\n\t        if (RegExp('^-[\\\\s]*$', 'g').test(value)) {\n\t          value = '-0';\n\t        }\n\t\n\t        if (decimalRex(dSeparator).test(value)) {\n\t          cleared = value.match(decimalRex(dSeparator)).join('').match(clearRex(dSeparator));\n\t          cleared = cleared ? cleared[0].replace(dSeparator, '.') : null;\n\t        }\n\t\n\t        return cleared;\n\t      }\n\t\n\t      function getCurrencySymbol() {\n\t        if (currencySymbol !== undefined) {\n\t          return currencySymbol;\n\t        }\n\t        return $locale.NUMBER_FORMATS.CURRENCY_SYM;\n\t      }\n\t\n\t      function executeFormatters() {\n\t        var viewValue = ngModel.$$rawModelValue;\n\t        for (var i = ngModel.$formatters.length - 1; i >= 0; i--) {\n\t          viewValue = ngModel.$formatters[i](viewValue);\n\t        }\n\t        ngModel.$setViewValue(viewValue);\n\t        ngModel.$render();\n\t      }\n\t\n\t      function keepInRange(value) {\n\t        if (active && hardCap && [undefined, null, ''].indexOf(value) === -1) {\n\t          if (max !== undefined && value > max) {\n\t            return max;\n\t          } else if (min !== undefined && value < min) {\n\t            return min;\n\t          }\n\t        }\n\t        return value;\n\t      }\n\t\n\t      ngModel.$parsers.push(function (viewValue) {\n\t        if (active && [undefined, null, ''].indexOf(viewValue) === -1) {\n\t          var value = clearValue(viewValue);\n\t          // Check for fast digitation (-. or .)\n\t          if (value === '.' || value === '-.') {\n\t            value = '.0';\n\t          }\n\t          return Number(value);\n\t        }\n\t        return viewValue;\n\t      });\n\t\n\t      ngModel.$parsers.push(keepInRange);\n\t      ngModel.$formatters.push(function (value) {\n\t        if (active && [undefined, null, ''].indexOf(value) === -1) {\n\t          return $filter('currency')(value, getCurrencySymbol(), fraction);\n\t        }\n\t        return value;\n\t      });\n\t\n\t      ngModel.$validators.min = function (value) {\n\t        if (!ngRequired && ([undefined, null, ''].indexOf(value) !== -1 || isNaN(value))) {\n\t          return true;\n\t        }\n\t        return !active || [undefined, null].indexOf(min) !== -1 || isNaN(min) || value >= min;\n\t      };\n\t\n\t      ngModel.$validators.max = function (value) {\n\t        if (!ngRequired && ([undefined, null, ''].indexOf(value) !== -1 || isNaN(value))) {\n\t          return true;\n\t        }\n\t        return !active || [undefined, null].indexOf(max) !== -1 || isNaN(max) || value <= max;\n\t      };\n\t\n\t      ngModel.$validators.fraction = function (value) {\n\t        return !active || !value || !isNaN(value);\n\t      };\n\t\n\t      scope.$on('currencyRedraw', function () {\n\t        if (initialized) {\n\t          ngModel.$commitViewValue();\n\t          var value = keepInRange(ngModel.$$rawModelValue);\n\t          if (value !== ngModel.$$rawModelValue) {\n\t            ngModel.$setViewValue(value);\n\t            ngModel.$commitViewValue();\n\t          }\n\t          executeFormatters();\n\t        }\n\t      });\n\t\n\t      element.on('focus', function () {\n\t        var viewValue = ngModel.$$rawModelValue;\n\t\n\t        if (isNaN(viewValue) || viewValue === '' || viewValue === null) {\n\t          viewValue = '';\n\t        } else {\n\t          viewValue = Number(viewValue).toFixed(fraction);\n\t        }\n\t        if (ngModel.$viewValue !== viewValue) {\n\t          ngModel.$setViewValue(viewValue);\n\t          ngModel.$render();\n\t          element.triggerHandler('focus');\n\t        }\n\t      });\n\t\n\t      element.on('blur', function () {\n\t        ngModel.$commitViewValue();\n\t        executeFormatters();\n\t      });\n\t    }\n\t  };\n\t}\n\n/***/ },\n/* 2 */\n/***/ function(module, exports) {\n\n\tmodule.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n/***/ }\n/******/ ])\n});\n;\n\n\n/** WEBPACK FOOTER **\n ** ng-currency.js\n **/"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId])\n \t\t\treturn installedModules[moduleId].exports;\n\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\texports: {},\n \t\t\tid: moduleId,\n \t\t\tloaded: false\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.loaded = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(0);\n\n\n\n/** WEBPACK FOOTER **\n ** webpack/bootstrap 42e882a8b251edd246b6\n **/","import angular from 'angular';\nimport ngCurrency from './ng-currency.directive.js';\n\nconst module = angular.module('ng-currency', []);\n\nmodule.directive('ngCurrency', ngCurrency);\n\nexport default module.name;\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng-currency.module.js\n **/","/*\n * ng-currency\n * http://alaguirre.com/\n\n * Version: 0.10.1 - 2016-06-05\n * License: MIT\n */\n\n/* @ngInject */\nexport default function ngCurrency($filter, $locale, $timeout) {\n  return {\n    require: 'ngModel',\n    link: (scope, element, attrs, ngModel) => {\n      let initialized, hardCap, min, max, currencySymbol, ngRequired;\n      let active = true;\n      let fraction = 2;\n\n      attrs.$observe('ngCurrency', (value) => {\n        active = (value !== 'false');\n        refresh();\n      });\n      attrs.$observe('hardCap', (value) => {\n        hardCap = (value === 'true');\n        refresh();\n      });\n      attrs.$observe('min', (value) => {\n        min = value ? Number(value) : undefined;\n        refresh();\n      });\n      attrs.$observe('max', (value) => {\n        max = value ? Number(value) : undefined;\n        refresh();\n      });\n      attrs.$observe('currencySymbol', (value) => {\n        currencySymbol = value;\n        refresh();\n      });\n      attrs.$observe('ngRequired', (value) => {\n        ngRequired = value;\n        refresh();\n      });\n      attrs.$observe('fraction', (value) => {\n        fraction = value || 2;\n        refresh();\n      });\n\n      $timeout(() => {\n        initialized = true;\n        refresh();\n      });\n\n      function refresh() {\n        if (initialized) {\n          ngModel.$validate();\n          scope.$emit('currencyRedraw');\n        }\n      }\n\n      function decimalRex(dChar) {\n        return RegExp('\\\\d|\\\\-|\\\\' + dChar, 'g');\n      }\n\n      function clearRex(dChar) {\n        return RegExp('\\\\-{0,1}((\\\\' + dChar + ')|([0-9]{1,}\\\\' + dChar + '?))&?[0-9]{0,' + fraction + '}', 'g');\n      }\n\n      function clearValue(value) {\n        value = String(value);\n        let dSeparator = $locale.NUMBER_FORMATS.DECIMAL_SEP;\n        let cleared = null;\n\n        if (value.indexOf($locale.NUMBER_FORMATS.DECIMAL_SEP) === -1 &&\n          value.indexOf('.') !== -1 &&\n          fraction > 0) {\n          dSeparator = '.';\n        }\n\n        // Replace negative pattern to minus sign (-)\n        const neg_dummy = $filter('currency')('-1', getCurrencySymbol(), fraction);\n        const neg_regexp = RegExp('[0-9.' + $locale.NUMBER_FORMATS.DECIMAL_SEP + $locale.NUMBER_FORMATS.GROUP_SEP + ']+');\n        const neg_dummy_txt = neg_dummy.replace(neg_regexp.exec(neg_dummy), '');\n        const value_dummy_txt = value.replace(neg_regexp.exec(value), '');\n\n        // If is negative\n        if (neg_dummy_txt === value_dummy_txt) {\n          value = '-' + neg_regexp.exec(value);\n        }\n\n        if (RegExp('^-[\\\\s]*$', 'g').test(value)) {\n          value = '-0';\n        }\n\n        if (decimalRex(dSeparator).test(value)) {\n          cleared = value.match(decimalRex(dSeparator))\n            .join('').match(clearRex(dSeparator));\n          cleared = cleared ? cleared[0].replace(dSeparator, '.') : null;\n        }\n\n        return cleared;\n      }\n\n      function getCurrencySymbol() {\n        if (currencySymbol !== undefined) {\n          return currencySymbol;\n        }\n        return $locale.NUMBER_FORMATS.CURRENCY_SYM;\n      }\n\n      function executeFormatters() {\n        let viewValue = ngModel.$$rawModelValue;\n        for (let i = ngModel.$formatters.length - 1; i >= 0; i--) {\n          viewValue = ngModel.$formatters[i](viewValue);\n        }\n        ngModel.$setViewValue(viewValue);\n        ngModel.$render();\n      }\n\n      function keepInRange(value) {\n        if (active && hardCap && [undefined, null, ''].indexOf(value) === -1) {\n          if (max !== undefined && value > max) {\n            return max;\n          } else if (min !== undefined && value < min) {\n            return min;\n          }\n        }\n        return value;\n      }\n\n      ngModel.$parsers.push((viewValue) => {\n        if (active && [undefined, null, ''].indexOf(viewValue) === -1) {\n          let value = clearValue(viewValue);\n          // Check for fast digitation (-. or .)\n          if (value === '.' || value === '-.') {\n            value = '.0';\n          }\n          return Number(value);\n        }\n        return viewValue;\n      });\n\n      ngModel.$parsers.push(keepInRange);\n      ngModel.$formatters.push((value) => {\n        if (active && [undefined, null, ''].indexOf(value) === -1) {\n          return $filter('currency')(value, getCurrencySymbol(), fraction);\n        }\n        return value;\n      });\n\n      ngModel.$validators.min = (value) => {\n        if (!ngRequired && ([undefined, null, ''].indexOf(value) !== -1 || isNaN(value))) {\n          return true;\n        }\n        return !active ||\n          [undefined, null].indexOf(min) !== -1 || isNaN(min) ||\n          value >= min;\n      };\n\n      ngModel.$validators.max = (value) => {\n        if (!ngRequired && ([undefined, null, ''].indexOf(value) !== -1 || isNaN(value))) {\n          return true;\n        }\n        return !active ||\n          [undefined, null].indexOf(max) !== -1 || isNaN(max) ||\n          value <= max;\n      };\n\n      ngModel.$validators.fraction = (value) => {\n        return !active || !value || !isNaN(value);\n      };\n\n      scope.$on('currencyRedraw', () => {\n        if (initialized) {\n          ngModel.$commitViewValue();\n          const value = keepInRange(ngModel.$$rawModelValue);\n          if (value !== ngModel.$$rawModelValue) {\n            ngModel.$setViewValue(value);\n            ngModel.$commitViewValue();\n          }\n          executeFormatters();\n        }\n      });\n\n      element.on('focus', () => {\n        let viewValue = ngModel.$$rawModelValue;\n\n        if (isNaN(viewValue) || viewValue === '' || viewValue === null) {\n          viewValue = '';\n        } else {\n          viewValue = Number(viewValue).toFixed(fraction);\n        }\n        if (ngModel.$viewValue !== viewValue) {\n          ngModel.$setViewValue(viewValue);\n          ngModel.$render();\n          element.triggerHandler('focus');\n        }\n      });\n\n      element.on('blur', () => {\n        ngModel.$commitViewValue();\n        executeFormatters();\n      });\n    }\n  };\n}\n\n\n\n/** WEBPACK FOOTER **\n ** ./ng-currency.directive.js\n **/","module.exports = __WEBPACK_EXTERNAL_MODULE_2__;\n\n\n/*****************\n ** WEBPACK FOOTER\n ** external {\"root\":\"angular\",\"commonjs2\":\"angular\",\"commonjs\":\"angular\",\"amd\":\"angular\"}\n ** module id = 2\n ** module chunks = 0\n **/"],"sourceRoot":""}